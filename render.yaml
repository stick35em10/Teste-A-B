# Render Configuration File
# Deploy: Teste A/B - AnÃ¡lise EstatÃ­stica
# Platform: Web Service + Cron Jobs

version: '1'

services:
  # ðŸŽ¯ ServiÃ§o Web Principal (Dashboard)
  - type: web
    name: teste-ab-dashboard
    env: python
    plan: free
    region: ohio
    branch: dev_to_deploy #main
    
    # ConfiguraÃ§Ãµes do Build
    buildCommand: |
      pip install -r requirements.txt
      python -c "import nltk; nltk.download('punkt')"
      
    # Comando de InicializaÃ§Ã£o
    startCommand: |
      if [ -f "app.py" ]; then
        gunicorn app:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120
      elif [ -f "main.py" ]; then
        gunicorn main:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120
      else
        streamlit run streamlit_app.py --server.port $PORT --server.address 0.0.0.0
      fi
    
    # VariÃ¡veis de Ambiente
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: false
      - key: SECRET_KEY
        generateValue: true
    
    # Health Check
    healthCheckPath: /health
    autoDeploy: true
    
    # Escalabilidade
    numInstances: 1

  # ðŸ“Š ServiÃ§o de Background (Processamento de Dados)
  - type: worker
    name: teste-ab-worker
    env: python
    plan: free
    region: ohio
    branch: main
    
    buildCommand: pip install -r requirements.txt
    startCommand: python worker.py
    
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: WORKER_TYPE
        value: data_processing

  # ðŸ“ˆ ServiÃ§o de Redis (Cache)
  - type: redis
    name: teste-ab-cache
    plan: free
    region: ohio
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru